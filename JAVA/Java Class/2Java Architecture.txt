Java Architecture:
  >Java Virtual Machine(JVM)
  >Java Byte Code(.class file)
  >Java Application Programming Interface(Java API)
  >Java Language(Used to write Source files)

Java is not a language, instead it called as Technology because it is both language and a platform( platform: It is a hardware or a software or both software and hardware on which other programs can run).

Java Virtual Machine(JVM):
	Java Virtual Machine is the software platform on which Java programs execute. It converts the java byte code to Machine understandable code. 

Java .class(Byte Code) file:
	The java source file first compiled which results in creating a .class file. The .class file contains every instruction of the size 1 byte. For this reason the .class file code is called as Byte Code.

	Java Language + Java API
	------------------------
	!	!	!	!
	A.java   B.java   C.java   D.java
	\	|	|	/
	 \	|	|            /

	            Java Compiler

	  /	|	|      \
	 /	|	|	\
	A.class  B.class  C.class  D.class

Java Technology knows the Architectures of all the platforms/systems around the world.

This Byte code is known to every machine and executed by any machine which has the installed Java Runtime Environment(JRE).

Java Virtual Machine and the installed Java API Combinely called as the Java Runtime Environment(JRE).

	.class file
	     !
	    JVM	<------- Java API
	     !
	Machine Understandable Code

Depending on the paltform the JVM uses that API(Used by the JVM) to convert the code to be executed by that particular machine. Because JVM is platform dependent.

Java Application Programming Interface(Java API):
	Java API consists of set Packages which consists of Classes(Consists of set of Methods) and Interfaces again sub packages.

	These classes and Interfaces are used to write our source programs that can perform our tasks useful for programmer.

Java Language:
	Using Java language we can write statements/instructions for our programs.


Java Provides Security and Portability:
	Java provides security by using  a sandbox model. It consists of three models for security.
  >Class Loader
  >Byte code verifier
  >Security Manager

	Class loader used to load the specified classes/source programs from the secondary memory to the main memory. Its job is to load the class into memory.

	Byte code verifier check where the .class file and bring that .class file to JVM to load into the memory. Loader Make use of bytecode verifier for verfication of bytecode. if there are any errors than the .class file won't process further.

In Runtime the security manager will come into the picture.

Java Uses Both Compiler and Interpreter. As it uses interpreter it is slower than the C and C++.

	In Modern JVM there is not Interpreter usage, instead they use JIT(Just in time) Compilers.


There are Three Editions of Java Technology:
	They are,
	> J2ME: Java 2 Platform, Micro Edition
	> J2SE: Java 2 Platform, Standard Edition
	> J2EE: Java 2 Platform, Enterprise Edition

J2SE:
	J2SE provides an environment for developing many different types of Java applications and includes support for GUI programming, threads, input/output, networking, XML, CORBA, applets, JavaBeans, remote method invocation, security, and database access.

J2ME:
	J2ME is not a slimmed-down version of J2SE. Instead, it establishes a procedure for defining what a particular JVM designed for an electronic device will provide. The J2ME technology has two components:
	> Configurations: Define the type of JVM that is being targeted.
	> Profiles: Describe specification details about the device that is being targeted. Each device has a profile listing the standard Java APIs available for that device.

J2EE:
	J2EE is a collection of Java technologies that create a platform for distributed applications. Along with the J2SE , J2EE allows for the most complex of multitier software applications to be portable across multiple platforms.

J2EE consists of the following technologies:
 >Enterprise JavaBeans (EJB). An EJB is a component architecture for the development and deployment of object-oriented distributed business applications. Applications written using the EJB architecture are scalable, transactional, and multiuser secure.
 >Java Servlets. A servlet is a Java application that runs in a Web server.
 >JavaServer Pages (JSP). A JavaServer Page is similar to a servlet and allows for the creation of dynamic Web pages.
 >Java Database Connectivity (JDBC). JDBC allows Java applications to access a database.
 >Extensible Markup Language (XML). XML provides a mechanism for
describing data using tags in a platform-independent manner.
 >Java Naming and Directory Interface (JNDI). JNDI allows Java applications to access naming services and directory services.
 >Java Transaction API (JTA). JTA allows Java applications to access a transaction service.
 >Java Transaction Service (JTS). JTS defines the implementation of a transaction manager that supports the JTA.
 >Java Messaging Service (JMS). JMS allows for Java applications to access a message service.
 >Java IDL. The Java IDL allows Java applications to use CORBA
implementations.
 >JavaMail. JavaMail allows Java applications to access an email service.
 >Connectors. Connectors allow Java applications to access enterprise information systems.
 >Java Web Services. Java Web Services allow Java applications to take advantage of the emerging Web services technologies.

Java Development Kit(JDK):
	We work on J2SE(Java 2 Platform, Standard Edition). 
	By the way, there is no Java 1. Before Java 2, the versions of Java were referred to by the version of the Java Development Kit (JDK).
The first release of Java was JDK 1.0, which was released in 1995. The next release was JDK 1.1 with enough changes and additions to JDK 1.0.
With the release of JDK 1.2, Sun started referring to the language as Java 2, and the developer’s kit is now called the
Standard Developer’s Kit (SDK).

There are many releases in Java:
	java 1.2 (java2)
	java 1.3 
	java 1.4
	java 1.5
	java 1.6
The SDK contains many tools for developing and running Java applications, most importantly a compiler and JVM. The current version of the Java 2 SDK is 1.7, but Oracle updates Java 2 frequently;

The SDK can be found at http://java.sun.com/j2se. or from oracle website.

To download the SDK, click the link for J2SE Downloads, and you will taken to the SDK download page. This page has two columns for each platform: one for the JRE and one for the SDK. JRE stands for Java Runtime Environment, which is what you would
download if you wanted to just run Java applications. The JRE is essentially the JVM for your platform.

When you install SDK, the Installation path will be like this,
	C:\Program Files\Java
After you have successfully installed the SDK, you need to set your PATH environment variable so the compiler and JVM can be executed easily from a command prompt. The folder to add to your path is the bin folder where you installed the SDK, like C:\Program Files\Java\jdk1.7.0\bin.

in the installed directory we have different folders:
JDK  (the name may be different, for example, jdk1.6.0)   
   >bin ---> Contain Utilities(the compiler and tools are here)
   >include ---> files for native methods  
   >lib ---> library files 
   >src ---> look in the various subdirectories for the library source (after expanding src.jar)  
   >jre ---> Java runtime environment files 

There are different Utilities in the bin directory:
	> javac:
		javac stands for java compiler, used to convert the java source(.java) file to its byte code(.class) file.
	All compilers of the java speak same byte code language.

	> java:
		It is the java interpreter nothing but java virtual machine(JVM)(as JIT compiler) that comes with the SDK. It interprets the .class file.
	
	> Javadoc:
		Javadoc used to generate documentation for the java source file created by you.



There are two types of programs that we can write in java.
	1. Normal Programs
		> Console Applications
		> GUI Applications
	2. Applet programs/ Web base applications


To write java programs we need either a basic text editor or any IDE(Integrated Development Environment).

The Basic Text Editor we have is Notepad, and there are more than 150 Java IDEs are in use like Eclipse, Netbeans, SunStudio,etc.
