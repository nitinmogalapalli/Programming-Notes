Java Is a Strongly Typed Language,

every variable has a type, 
every expression has a type, 
and every type is strictly defined.

The Primitive Types:

Java defines eight primitive types of data: 
byte, short, int, long, char, float, double, and boolean.

Arrays:
	An array is a group of like-typed variables that are referred to by a common name. Arrays of any type can be created and may have one or more dimensions. 
A specific element in an array is accessed by its index.
One-Dimensional Arrays:
	A one-dimensional array is, essentially, a list of like-typed variables. To create an array, you first must create an array variable of the desired type. The general form of a one-dimensional array declaration is 
	
	Data_type var-name[ ];

In Java The memory allocation to the arrays can be done dynamically using a special keyword called "new". new is a special operator that allocates memory.

The general form of new as it applies to one-dimensional arrays appears as follows: 

	array-var = new type[size];
eg:
	int arr[];
	arr = new int[10];

we can write the above statements in single line:
	int arr[] = new int[10];

Accessing Arrays:
	We use an index to access the array elements/values starting from 0 to size-1.

Multi-Dimentional Arrays:

	Here we use the different dimensions of memory allocations.
	2-D Arrays can have the same syntax followed in using single dimentional arrays only difference is declaring two indexs(2-D).

	type arr-name[][];
	arr-name = new int[row][column];
